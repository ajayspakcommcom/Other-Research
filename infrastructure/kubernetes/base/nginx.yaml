apiVersion: apps/v1
kind: Deployment
metadata:
  name: spak-nginx
  namespace: spak-platform
  labels:
    app.kubernetes.io/name: spak-nginx
    app.kubernetes.io/component: proxy
    app.kubernetes.io/version: "1.25"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: spak-nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spak-nginx
        app.kubernetes.io/component: proxy
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: tls-secret
          mountPath: /etc/nginx/ssl
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
      volumes:
      - name: nginx-config
        configMap:
          name: spak-nginx-config
      - name: tls-secret
        secret:
          secretName: spak-tls-secret

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spak-ingress
  namespace: spak-platform
  labels:
    app.kubernetes.io/name: spak-ingress
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # For automatic SSL
spec:
  tls:
  - hosts:
    - spak.com
    - api.spak.com
    secretName: spak-tls-secret
  rules:
  - host: spak.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: spak-frontend
            port:
              number: 3000
  - host: api.spak.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: spak-backend
            port:
              number: 3001
      - path: /health
        pathType: Exact
        backend:
          service:
            name: spak-backend
            port:
              number: 3001